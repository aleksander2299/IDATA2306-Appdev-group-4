spring.application.name=BackendGroup4Idata2306

spring.config.import=optional:dotenv:./.env

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
#set username and password as root for now until we find out what to do
#replace localhost with the database host, 3306 with port number, library with the database name you use
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/appdev4

# Disable database auto-configuration
#spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration

# If you want tables to be auto-generated, uncomment the next line (not MySQL-specific)
spring.jpa.hibernate.ddl-auto=create

# If you want to see the SQL queries executed by the framework, uncomment the next line:
spring.jpa.show-sql: true

# If you want tables to be auto-generated, uncomment the next line (not MySQL-specific)
# spring.jpa.hibernate.ddl-auto=update

# If you want to see the SQL queries executed by the framework, uncomment the next line:
# spring.jpa.show-sql: true

# Debugging
#logging.level.org.springframework.security=DEBUG
#logging.level.org.springframework.web=DEBUG

# This will ensure that after Hibernate schema creation is performed, then additionally schema.sql is read for any additional schema changes, and further data.sql is executed to populate the database.
spring.sql.init.mode=always
spring.jpa.defer-datasource-initialization=true

jwt.secret=${JWT_SECRET}



